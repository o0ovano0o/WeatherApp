{"ast":null,"code":"import config from\"../../config\";export var UPDATE_SEARCH_TERM='UPDATE_SEARCH_TERM';export var UPDATE_WEATHER_DATA='UPDATE_WEATHER_DATA';export var SET_ERROR_MESSAGE='SET_ERROR_MESSAGE';export var SET_IS_LOADING='SET_IS_LOADING';export var SET_IS_FAHRENHEIT='SET_IS_FAHRENHEIT';export function updateSearchTerm(searchTerm){return{type:UPDATE_SEARCH_TERM,searchTerm:searchTerm};}export function updateWeatherData(weatherData){return{type:UPDATE_WEATHER_DATA,weatherData:weatherData};}export function setErrorMessage(errorMessage){return{type:SET_ERROR_MESSAGE,errorMessage:errorMessage};}export function setIsLoading(isLoading){return{type:SET_IS_LOADING,isLoading:isLoading};}export function setIsFahrenheit(isFahrenheit){return{type:SET_IS_FAHRENHEIT,isFahrenheit:isFahrenheit};}export function searchByCity(searchTerm){return function(dispatch){var appid=config.appid,url=config.url;dispatch(setIsLoading(true));return fetch(url+\"?q=\"+searchTerm+\"&appid=\"+appid).then(function(response){return response.json();}).then(function(data){dispatch(setErrorMessage(''));dispatch(setIsLoading(false));dispatch(updateWeatherData(data));}).catch(function(){dispatch(updateWeatherData({}));dispatch(setErrorMessage(\"Could not fetch weather for \"+searchTerm));});};}export function searchByCoordinates(latitude,longitude){return function(dispatch){var appid=config.appid,url=config.url;dispatch(setIsLoading(true));return fetch(url+\"?lat=\"+latitude+\"&lon=\"+longitude+\"&lang=vi&units=metric&appid=\"+appid).then(function(response){return response.json();}).then(function(data){dispatch(setErrorMessage(''));dispatch(setIsLoading(false));dispatch(updateWeatherData(data));}).catch(function(){dispatch(updateWeatherData({}));dispatch(setErrorMessage('Could not fetch weather for your location'));});};}","map":{"version":3,"sources":["C:/Users/Think Fap/Documents/GitHub/WeatherApp/app/actions/index.js"],"names":["config","UPDATE_SEARCH_TERM","UPDATE_WEATHER_DATA","SET_ERROR_MESSAGE","SET_IS_LOADING","SET_IS_FAHRENHEIT","updateSearchTerm","searchTerm","type","updateWeatherData","weatherData","setErrorMessage","errorMessage","setIsLoading","isLoading","setIsFahrenheit","isFahrenheit","searchByCity","dispatch","appid","url","fetch","then","response","json","data","catch","searchByCoordinates","latitude","longitude"],"mappings":"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","sourcesContent":["/* eslint no-undef: \"off\" */\r\n\r\nimport config from '../../config';\r\n\r\nexport const UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM';\r\nexport const UPDATE_WEATHER_DATA = 'UPDATE_WEATHER_DATA';\r\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\r\nexport const SET_IS_FAHRENHEIT = 'SET_IS_FAHRENHEIT';\r\n\r\n/**\r\n * updateSearchTerm - set new search term\r\n * @param  {string} searchTerm - what the user entered\r\n * @return {object} Action\r\n */\r\nexport function updateSearchTerm(searchTerm) {\r\n    return {\r\n        type: UPDATE_SEARCH_TERM,\r\n        searchTerm,\r\n    };\r\n}\r\n\r\n/**\r\n * updateWeatherData - set data from API response\r\n * @param  {object} weatherData - response from API\r\n * @return {object} Action\r\n */\r\nexport function updateWeatherData(weatherData) {\r\n    return {\r\n        type: UPDATE_WEATHER_DATA,\r\n        weatherData,\r\n    };\r\n}\r\n\r\n/**\r\n * setErrorMessage - change or show error message\r\n * @param {object} errorMessage - message to display\r\n * @return {object} Action\r\n */\r\nexport function setErrorMessage(errorMessage) {\r\n    return {\r\n        type: SET_ERROR_MESSAGE,\r\n        errorMessage,\r\n    };\r\n}\r\n\r\n/**\r\n * setIsLoading - show or hide loading spinner\r\n * @param {boolean} isLoading\r\n * @return {object} Action\r\n */\r\nexport function setIsLoading(isLoading) {\r\n    return {\r\n        type: SET_IS_LOADING,\r\n        isLoading,\r\n    };\r\n}\r\n\r\n/**\r\n * setIsFahrenheit - toggle between F and C temperatures\r\n * @param {Boolean} isFahrenheit\r\n * @return {object} Action\r\n */\r\nexport function setIsFahrenheit(isFahrenheit) {\r\n    return {\r\n        type: SET_IS_FAHRENHEIT,\r\n        isFahrenheit,\r\n    };\r\n}\r\n\r\nexport function searchByCity(searchTerm) {\r\n    return (dispatch) => {\r\n        const { appid, url } = config;\r\n        dispatch(setIsLoading(true));\r\n        return fetch(`${url}?q=${searchTerm}&appid=${appid}`)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                dispatch(setErrorMessage(''));\r\n                dispatch(setIsLoading(false));\r\n                dispatch(updateWeatherData(data));\r\n            })\r\n            .catch(() => {\r\n                dispatch(updateWeatherData({}));\r\n                dispatch(setErrorMessage(`Could not fetch weather for ${searchTerm}`));\r\n            });\r\n    };\r\n}\r\n\r\nexport function searchByCoordinates(latitude, longitude) {\r\n    return (dispatch) => {\r\n        const { appid, url } = config;\r\n        dispatch(setIsLoading(true));\r\n        return fetch(`${url}?lat=${latitude}&lon=${longitude}&lang=vi&units=metric&appid=${appid}`)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                dispatch(setErrorMessage(''));\r\n                dispatch(setIsLoading(false));\r\n                dispatch(updateWeatherData(data));\r\n            })\r\n            .catch(() => {\r\n                dispatch(updateWeatherData({}));\r\n                dispatch(setErrorMessage('Could not fetch weather for your location'));\r\n            });\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}