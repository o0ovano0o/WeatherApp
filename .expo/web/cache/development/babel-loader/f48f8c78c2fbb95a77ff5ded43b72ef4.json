{"ast":null,"code":"import config from \"../../config\";\nexport var UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM';\nexport var UPDATE_WEATHER_DATA = 'UPDATE_WEATHER_DATA';\nexport var SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\nexport var SET_IS_LOADING = 'SET_IS_LOADING';\nexport var SET_IS_FAHRENHEIT = 'SET_IS_FAHRENHEIT';\nexport function updateSearchTerm(searchTerm) {\n  return {\n    type: UPDATE_SEARCH_TERM,\n    searchTerm: searchTerm\n  };\n}\nexport function updateWeatherData(weatherData) {\n  return {\n    type: UPDATE_WEATHER_DATA,\n    weatherData: weatherData\n  };\n}\nexport function setErrorMessage(errorMessage) {\n  return {\n    type: SET_ERROR_MESSAGE,\n    errorMessage: errorMessage\n  };\n}\nexport function setIsLoading(isLoading) {\n  return {\n    type: SET_IS_LOADING,\n    isLoading: isLoading\n  };\n}\nexport function setIsFahrenheit(isFahrenheit) {\n  return {\n    type: SET_IS_FAHRENHEIT,\n    isFahrenheit: isFahrenheit\n  };\n}\nexport function searchByCity(searchTerm) {\n  return function (dispatch) {\n    var appid = config.appid,\n        url = config.url;\n    dispatch(setIsLoading(true));\n    return fetch(url + \"?q=\" + searchTerm + \"&appid=\" + appid).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      dispatch(setErrorMessage(''));\n      dispatch(setIsLoading(false));\n      dispatch(updateWeatherData(data));\n    }).catch(function () {\n      dispatch(updateWeatherData({}));\n      dispatch(setErrorMessage(\"Could not fetch weather for \" + searchTerm));\n    });\n  };\n}\nexport function searchByCoordinates(latitude, longitude) {\n  return function (dispatch) {\n    var appid = config.appid,\n        url = config.url;\n    dispatch(setIsLoading(true));\n    return fetch(url + \"?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + appid).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      dispatch(setErrorMessage(''));\n      dispatch(setIsLoading(false));\n      dispatch(updateWeatherData(data));\n    }).catch(function () {\n      dispatch(updateWeatherData({}));\n      dispatch(setErrorMessage('Could not fetch weather for your location'));\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/Think Fap/Documents/GitHub/WeatherApp/app/actions/index.js"],"names":["config","UPDATE_SEARCH_TERM","UPDATE_WEATHER_DATA","SET_ERROR_MESSAGE","SET_IS_LOADING","SET_IS_FAHRENHEIT","updateSearchTerm","searchTerm","type","updateWeatherData","weatherData","setErrorMessage","errorMessage","setIsLoading","isLoading","setIsFahrenheit","isFahrenheit","searchByCity","dispatch","appid","url","fetch","then","response","json","data","catch","searchByCoordinates","latitude","longitude"],"mappings":"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","sourcesContent":["/* eslint no-undef: \"off\" */\r\n\r\nimport config from '../../config';\r\n\r\nexport const UPDATE_SEARCH_TERM = 'UPDATE_SEARCH_TERM';\r\nexport const UPDATE_WEATHER_DATA = 'UPDATE_WEATHER_DATA';\r\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\r\nexport const SET_IS_LOADING = 'SET_IS_LOADING';\r\nexport const SET_IS_FAHRENHEIT = 'SET_IS_FAHRENHEIT';\r\n\r\n/**\r\n * updateSearchTerm - set new search term\r\n * @param  {string} searchTerm - what the user entered\r\n * @return {object} Action\r\n */\r\nexport function updateSearchTerm(searchTerm) {\r\n    return {\r\n        type: UPDATE_SEARCH_TERM,\r\n        searchTerm,\r\n    };\r\n}\r\n\r\n/**\r\n * updateWeatherData - set data from API response\r\n * @param  {object} weatherData - response from API\r\n * @return {object} Action\r\n */\r\nexport function updateWeatherData(weatherData) {\r\n    return {\r\n        type: UPDATE_WEATHER_DATA,\r\n        weatherData,\r\n    };\r\n}\r\n\r\n/**\r\n * setErrorMessage - change or show error message\r\n * @param {object} errorMessage - message to display\r\n * @return {object} Action\r\n */\r\nexport function setErrorMessage(errorMessage) {\r\n    return {\r\n        type: SET_ERROR_MESSAGE,\r\n        errorMessage,\r\n    };\r\n}\r\n\r\n/**\r\n * setIsLoading - show or hide loading spinner\r\n * @param {boolean} isLoading\r\n * @return {object} Action\r\n */\r\nexport function setIsLoading(isLoading) {\r\n    return {\r\n        type: SET_IS_LOADING,\r\n        isLoading,\r\n    };\r\n}\r\n\r\n/**\r\n * setIsFahrenheit - toggle between F and C temperatures\r\n * @param {Boolean} isFahrenheit\r\n * @return {object} Action\r\n */\r\nexport function setIsFahrenheit(isFahrenheit) {\r\n    return {\r\n        type: SET_IS_FAHRENHEIT,\r\n        isFahrenheit,\r\n    };\r\n}\r\n\r\nexport function searchByCity(searchTerm) {\r\n    return (dispatch) => {\r\n        const { appid, url } = config;\r\n        dispatch(setIsLoading(true));\r\n        return fetch(`${url}?q=${searchTerm}&appid=${appid}`)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                dispatch(setErrorMessage(''));\r\n                dispatch(setIsLoading(false));\r\n                dispatch(updateWeatherData(data));\r\n            })\r\n            .catch(() => {\r\n                dispatch(updateWeatherData({}));\r\n                dispatch(setErrorMessage(`Could not fetch weather for ${searchTerm}`));\r\n            });\r\n    };\r\n}\r\n\r\nexport function searchByCoordinates(latitude, longitude) {\r\n    return (dispatch) => {\r\n        const { appid, url } = config;\r\n        dispatch(setIsLoading(true));\r\n        return fetch(`${url}?lat=${latitude}&lon=${longitude}&appid=${appid}`)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                dispatch(setErrorMessage(''));\r\n                dispatch(setIsLoading(false));\r\n                dispatch(updateWeatherData(data));\r\n            })\r\n            .catch(() => {\r\n                dispatch(updateWeatherData({}));\r\n                dispatch(setErrorMessage('Could not fetch weather for your location'));\r\n            });\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}